/*
 * Copyright (c) 2021 Abex
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * 1. Redistributions of source code must retain the above copyright notice, this
 *    list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright notice,
 *    this list of conditions and the following disclaimer in the documentation
 *    and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR
 * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
repositories {
	maven {
		url = 'https://repo.runelite.net'
	}
	mavenCentral()
}

configurations {
	runelite {
		resolutionStrategy {
			// we don't run any code from this configuration
			disableDependencyVerification()
		}
	}
}

def runeLiteVersion = file("../../runelite.version").text.trim()

dependencies {
	implementation "org.slf4j:slf4j-simple:1.7.10"
	implementation "com.google.code.findbugs:jsr305:3.0.2"
	implementation "com.google.guava:guava:23.2-jre"
	implementation "org.ow2.asm:asm:9.3"
	implementation "com.google.code.gson:gson:2.8.5"

	def lombok = "org.projectlombok:lombok:1.18.30"
	compileOnly lombok
	annotationProcessor lombok
	testCompileOnly lombok
	testAnnotationProcessor lombok

	runelite group: 'net.runelite', name: 'client', version: runeLiteVersion
	runelite group: 'net.runelite', name: 'jshell', version: runeLiteVersion
	runelite lombok
}

compileJava.options.compilerArgs += [
	"--add-exports", "jdk.compiler/com.sun.tools.javac.code=ALL-UNNAMED",
	"--add-exports", "jdk.compiler/com.sun.tools.javac.api=ALL-UNNAMED",
]

def apiFilePath = new File(project.buildDir, "api")

task api(type: JavaExec) {
	classpath = sourceSets.main.runtimeClasspath
	mainClass = "net.runelite.pluginhub.apirecorder.ClassRecorder"
	args = [apiFilePath] + configurations.runelite.files
}